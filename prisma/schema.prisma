// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_URL")
}

model CurrentState {
  id          Int     @id @default(autoincrement())
  temperature Decimal @db.Decimal(5, 2)
  ph          Decimal @db.Decimal(5, 2)
  ec          Decimal @db.Decimal(5, 2)
  waterLevel  WaterLevel
}

model Relay {
  id          Int     @id @default(autoincrement())
  K1          Boolean @default(false)
  K2          Boolean @default(false)
  K3          Boolean @default(false)
  K4          Boolean @default(false)
  K5          Boolean @default(false)
  K6          Boolean @default(false)
  K7          Boolean @default(false)
  K8          Boolean @default(false)
  K9          Boolean @default(false)
  K10         Boolean @default(false)
  K1pin       Int     @default(0)
  K2pin       Int     @default(0)
  K3pin       Int     @default(0)
  K4pin       Int     @default(0)
  K5pin       Int     @default(0)
  K6pin       Int     @default(0)
  K7pin       Int     @default(0)
  K8pin       Int     @default(0)
  K9pin       Int     @default(0)
  K10pin      Int     @default(0)
}

enum WaterLevel {
  LOW
  NORMAL
  HIGH
}
model Settings {
  id                  Int @id @default(autoincrement())
  flowRateA           Int
  flowRateB           Int
  flowRateC           Int
  flowRateD           Int
  mainVolumeContainer Int
}

model Reading {
  id             Int      @id @default(autoincrement())
  timestamp      DateTime @default(now())
  waterSensorA0  Decimal  @default(-1) @db.Decimal(5, 2)
  temperature    Decimal  @db.Decimal(5, 2)
  ph             Decimal  @db.Decimal(5, 2)
}

model Schedule {
  id          Int          @id @default(autoincrement())
  timestamp   DateTime     @default(now())
  weeklyParts WeeklyPart[]
}

model WeeklyPart {
  id         Int      @id @default(autoincrement())
  week       Int
  partA      Decimal  @db.Decimal(5, 2)
  partB      Decimal  @db.Decimal(5, 2)
  partC      Decimal  @db.Decimal(5, 2)
  schedule   Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  scheduleId Int
}
